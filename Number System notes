Binary & Decimal
Dec to binary:
  take the number and divide it by 2, if there is a remainder write 1, if not write 0
  take the quotient and repeat
  
  for eaxmple, for number 30, divide it by 2, since there isn't a remainder, our first number is 0
                now when you divide 15 by 2, there is a remainder so our next number is 1
                same with 7, making our third number 1
                3/2 is 1 remainder 1, fourth number = 1
                1/2 = 0 remainder 1, last number is 1
                
                now reverse the order of the numbers we obtained 
                30 = 11110              
                
                looks like:
                -------------------------------
                decimal_number = 30
                binary_number = ""

                while decimal_number > 0:
                    remainder = decimal_number % 2
                    binary_number = str(remainder) + binary_number
                    decimal_number = decimal_number // 2

                print(binary_number)
                ----------------------------------
                or you can use the bin() function
                ------------------------------------
                decimal_number = 30
                binary_number = bin(decimal_number)[2:]
                print(binary_number)
                -------------------------------------
                
Binary to Dec:
  Start with the binary number you want to convert.
  Assign a power of 2 to each digit, starting from 0 for the rightmost digit and increasing by 1 for each digit to the left.
  Multiply each digit by its corresponding power of 2.
  Sum up all the results from step 3 to obtain the decimal number
  
  Binary number: 11011

  Calculations:
  1 * 2^4 = 16
  1 * 2^3 = 8
  0 * 2^2 = 0
  1 * 2^1 = 2
  1 * 2^0 = 1

  Decimal equivalent:
  16 + 8 + 0 + 2 + 1 = 27



