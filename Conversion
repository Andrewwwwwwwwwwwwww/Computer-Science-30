import os

def binary_to_decimal(binary):
    output = int(str(binary),2)
    return output
    
def decimal_to_binary(dec):
    output = bin(int(dec))[2:]
    return output

def decimal_to_hex(decimal):
    output = hex(int(decimal))
    return output[2:]

def hex_to_decimal(hex_code):
    output = int(hex_code,16)
    return output

def hex_to_rgb(hex_code):
    if len(hex_code) != 6:
        return "None"
    else:
        r = int(hex_code[0:2], 16)
        g = int(hex_code[2:4], 16)
        b = int(hex_code[4:6], 16)
        return r, g, b

def rgb_to_hex(rgb):
    if rgb[0] > 255 or rgb[1] > 255 or rgb[2] > 255:
        print("invalid value (too high)")
        
    elif rgb[0] < 0 or rgb[1] < 0 or rgb[2] < 0:
        print("invalid value (too low)")
        
    else:
        hex_code = "#{:02x}{:02x}{:02x}".format(*rgb) # {:02x}, formatting specifier that turns the corresponding value to hex. The '2' means the output has a minimum length of 2. 
        return hex_code                               # The '0' means zero-padding if the number requires less then 2 digits
                                                      # * unpacks the tuple (rgb)

saved_file = "Saved_values.txt"
saved_numbers = {}

def load_saved_values():
    with open(saved_file, "r") as f:
        contents = f.read()
    saved_numbers.update(eval(contents))
    
def save_to_file():
    with open(saved_file, "w") as f:
        f.write(str(saved_numbers))


if os.path.isfile(saved_file):
    load_saved_values()

while True:
    data_type = int(input("What is your starting data type?\n \n 1. Binary \n 2. Decimal \n 3. Hex \n 4. RGB \n 5. Access saved value \n"))
    
    if data_type == 1:
        binary = input("Please Enter your binary value \n")
        decimal = binary_to_decimal(binary)
        hex_code = decimal_to_hex(decimal)
        rgb = hex_to_rgb(hex_code)
        print("Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb))
        
        save = int(input("\nWould you like to save this? \n 1. Yes \n 2. No \n"))
        if save == 1:
            saved_name = input("Please name this number \n")
            saved_numbers[saved_name] = "Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb)
            save_to_file()
        
    if data_type == 2:
        decimal = input("Please Enter your decimal value \n")
        binary = decimal_to_binary(decimal)
        hex_code = decimal_to_hex(decimal)
        rgb = hex_to_rgb(hex_code)
        print("Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb))
        
        save = int(input("\nWould you like to save this? \n 1. Yes \n 2. No \n"))
        if save == 1:
            saved_name = input("Please name this number \n")
            saved_numbers[saved_name] = "Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb)
            save_to_file()
        
    if data_type == 3:
        hex_code = input("Please Enter your Hex value \n")
        decimal = hex_to_decimal(hex_code)
        binary = decimal_to_binary(decimal)
        rgb = hex_to_rgb(hex_code)
        print("Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb))
        
        save = int(input("\nWould you like to save this? \n 1. Yes \n 2. No \n"))
        if save == 1:
            saved_name = input("Please name this number \n")
            saved_numbers[saved_name] = "Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb)
            save_to_file()
        
    if data_type == 4:
        rgb = input("Please Enter your RGB value \n")
        starting_value = [int(e) if e.isdigit() else e for e in rgb.split(',')]
        hex_code = rgb_to_hex(starting_value)
        decimal = hex_to_decimal(hex_code[1:])
        binary = decimal_to_binary(decimal)
        print("Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb))
        
        save = int(input("\nWould you like to save this? \n 1. Yes \n 2. No \n"))
        if save == 1:
            saved_name = input("Please name this number \n")
            saved_numbers[saved_name] = "Binary: {} Int: {} Hex: {} RGB: {}".format(binary, decimal, hex_code, rgb)
            save_to_file()
        
    if data_type == 5:
        for keys in saved_numbers.items():
            print(keys)
    
